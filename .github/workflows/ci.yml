# Copyright (c) 2023 Tim <tbckr>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of
# this software and associated documentation files (the "Software"), to deal in
# the Software without restriction, including without limitation the rights to
# use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
# the Software, and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
# FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
# IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#
# SPDX-License-Identifier: MIT

name: CI Pipeline

on:
  push:
    tags:
      - 'v*'
    branches:
      - main
      - 'renovate/**'
    paths:
      - '**/*.go'
      - '.golangci.yaml'
      - '.goreleaser.yaml'
      - '.github/workflows/ci.yml'
      - 'go.mod'
      - 'go.sum'
      - 'taskfile.yml'
      - 'scripts/gha-test.sh'
  pull_request:
    branches:
      - main
    paths:
      - '**/*.go'
      - '.golangci.yaml'
      - '.goreleaser.yaml'
      - '.github/workflows/ci.yml'
      - 'go.mod'
      - 'go.sum'
      - 'taskfile.yml'
      - 'scripts/gha-test.sh'

concurrency:
  group: ${{ github.workflow }}-$${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

permissions:
  contents: read
  pull-requests: read

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      # Checkout repo
      - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3
      # Install task.dev
      - uses: arduino/setup-task@v1
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      # Install various tools
      - uses: actions/setup-go@fac708d6674e30b6ba41289acaab6d4b75aa0753 # v4
        with:
          go-version: '>=1.20.6'
          cache: true
      - name: setup-tparse
        run: |
          go install github.com/mfridman/tparse@latest
      # Build executable
      - name: build
        run: |
          task clean
          task prepare
          task build
      # Run tests
      - name: test
        run: ./scripts/gha-test.sh
      # Upload coverage report
      - uses: codecov/codecov-action@eaaf4bedf32dbdc6b720b63067d99c4d77d6047d # v3
        with:
          file: ./coverage.txt
      # Check goreleaser config
      - uses: goreleaser/goreleaser-action@336e29918d653399e599bfca99fadc1d7ffbc9f7 # v4
        with:
          distribution: goreleaser
          version: latest
          args: check
      - run: ./sgpt version

  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      # Checkout repo
      - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3
      # Install Go
      - uses: actions/setup-go@fac708d6674e30b6ba41289acaab6d4b75aa0753 # v4
        with:
          go-version: '>=1.20.6'
          cache: true
      # Run linter
      - name: golangci-lint
        uses: golangci/golangci-lint-action@639cd343e1d3b897ff35927a75193d57cfcba299 # v3
        with:
          args: --timeout=5m --print-issued-lines --print-linter-name -c .golangci.yaml --out-format=github-actions

  vuln_check:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3
      - name: Install Go
        uses: actions/setup-go@fac708d6674e30b6ba41289acaab6d4b75aa0753 # v4
        with:
          cache: true
          go-version: '>=1.20.6'
      - name: govulncheck
        run: |
          go install golang.org/x/vuln/cmd/govulncheck@latest
          govulncheck ./...
